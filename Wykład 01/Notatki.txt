cechy:
    szybkość programów wynikowych -- porównywalna z C/C++
    bezpieczeństwo
        kontrolowane zarządzanie pamięcią
        unikanie UB (w bezpiecznym Ruście)
    dokładność/ścisłość
    wymagający, ale przyjazny kompilator
    rozwiązanie problemu własności -- przez pożycznie
            (borrow checker)
    bardzo ścisłe typowanie
    statyczne typowanie
    wnioskowanie typów
    elementy programowania funkcyjnego
    obiektowość bez dziedziczenia
        (ale z interfejsami)
    środowisko budowania, menedżer pakietów i inne narzędzia (cargo i przyległości)
    dokumentacja + narzędzia do jej automatycznego budowania (w cargo)
        
trzy języki
    bezpieczny Rust
    niebezpieczny Rust
    makra Rusta